values(raster_list[[i]])[values(raster_list[[i]]) >= 0] = NA
}
rel_old = rel
}
Raster_stack <- stack(raster_list)
Raster_stack <- setZ(Raster_stack, N_date_y_list[[y]],name="Date")
writeRaster(Raster_stack,filename = paste0("X:/Buehler_Philipp/Thiessen/Emscher/",ress,
"km/Thiessen_polygon_",y_names[[y]],".grd"))
# return(Raster_stack)
}
stopCluster(cl)
paste0("X:/Buehler_Philipp/Thiessen/Emscher/",ress,
"km/Thiessen_polygon_",y_names[[y]],".grd")
y=1
paste0("X:/Buehler_Philipp/Thiessen/Emscher/",ress,
"km/Thiessen_polygon_",y_names[[y]],".grd")
paste0("X:/Buehler_Philipp/Thiessen/Emscher/",ress,
"km_Thiessen_",y_names[[y]],".grd")
cl <- makeCluster(3)
registerDoParallel(cl)
Alle_list<-foreach(y=1:length(N_date_y_list), .packages = c("sp","dismo","raster","deldir","data.table")) %dopar% {
rel_old=numeric()
raster_list=list()
for (i in 1:length(N_date_y_list[[y]])){
ii = N_date_y_list[[y]][i]
rel = which(!is.na(N_list[[y]][i,]))
if(length(rel)>2){
if(!identical(rel,rel_old)){
vor <- voronoi(Station_list[rel,],ext=extt)
}
vor$N = t(N_list[[y]][i,rel,with=FALSE])
raster_list[[i]] = rasterize(vor,Snap_raster_HR,field="N")
}else{
raster_list[[i]]= Snap_raster_HR
values(raster_list[[i]])[values(raster_list[[i]]) >= 0] = NA
}
rel_old = rel
}
Raster_stack <- stack(raster_list)
Raster_stack <- setZ(Raster_stack, N_date_y_list[[y]],name="Date")
writeRaster(Raster_stack,filename = paste0("X:/Buehler_Philipp/Thiessen/Emscher/",ress,
"km_Thiessen_",y_names[[y]],".grd"))
# return(Raster_stack)
}
stopCluster(cl)
library(raster)
library(rgdal)
library(sp)
library(foreach)
library(doParallel)
source("functions.R")
library(raster)
library(rgdal)
library(sp)
library(foreach)
library(doParallel)
source("functions.R")
Raster_stack= brick("X:/Buehler_Philipp/Thiessen/Emscher/2km_Thiessen_1951.grd")
Date_radolan=getZ(Raster_stack)
Raster_stack
library(raster)
library(rgdal)
library(sp)
library(foreach)
library(doParallel)
source("functions.R")
Raster_stack= brick("X:/Buehler_Philipp/Thiessen/Emscher/2km_Thiessen_1951.grd")
Date_radolan=getZ(Raster_stack)
projj= CRS(projection(Raster_stack))
Shapes_Mulde=readOGR(dsn="U:/GIS/Mulde_Daten/Shapes_kum",layer="Shapes_kum_Mulde")
Shapes_Mulde=spTransform(Shapes_Mulde, projj)
Raster_stack= brick("X:/Buehler_Philipp/Thiessen/Emscher/2km_Thiessen_1951.grd")
Date_radolan=getZ(Raster_stack)
Shapes_Mulde=readOGR(dsn="U:/GIS/Emschere_Daten/Shapes_kum",layer="Shapes_kum")
Shapes_Mulde=readOGR(dsn="U:/GIS/Emscher_Daten/Shapes_kum",layer="Shapes_kum")
Shapes_Mulde=spTransform(Shapes_Mulde, projj)
Raster_stack_array <- as.array(Raster_stack)
dimz <- dim(Raster_stack_array)
Raster_stack_array_vec <- Raster_stack_array
plot(Raster_stack[[1]])
lines(Shapes_Mulde)
Raster_stack_array <- as.array(Raster_stack)
dimz <- dim(Raster_stack_array)
Raster_stack_array_vec <- Raster_stack_array
dim(Raster_stack_array_vec) <-c(dimz[1] * dimz[2], dimz[3])
DF <- data.frame(Date=Date_radolan)
nrow(Shapes_Mulde)
DF <- data.frame(Date=Date_radolan)
for(i in 1:nrow(Shapes_Mulde)){
print(i)
ind_shapes_i <-  which(!is.na(as.matrix(mask(Raster_stack[[1]],Shapes_Mulde[i,]))))
daily_mean <- apply(Raster_stack_array_vec,2, function(x) mean(x[ind_shapes_i]))
DF[,(i+1)] <- round(daily_mean,2)
}
Raster_stack_array
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/)
for(i in 111))
Raster_stack= brick("X:/Buehler_Philipp/Thiessen/Emscher/2km_Thiessen_1951.grd")
Raster_stack_array <- as.array(Raster_stack)
}
dimz <- dim(Raster_stack_array)
Raster_stack_array_vec <- Raster_stack_array
dim(Raster_stack_array_vec) <-c(dimz[1] * dimz[2], dimz[3])
DF <- data.frame(Date=Date_radolan)
for(i in 1:nrow(Shapes_Mulde)){
print(i)
ind_shapes_i <-  which(!is.na(as.matrix(mask(Raster_stack[[1]],Shapes_Mulde[i,]))))
daily_mean <- apply(Raster_stack_array_vec,2, function(x) mean(x[ind_shapes_i]))
DF[,(i+1)] <- round(daily_mean,2)
}
names(DF) <- c("Date",paste("EZG_",as.character(Shapes_Mulde$GRIDCODE),sep=""))
write.table(DF,"U:/P_hourly_Mulde.csv",sep=";",row.names = FALSE,col.names = TRUE)
# Date_radolan_day <- as.Date(Date_radolan)
# which(Date_radolan_day== as.Date("2013-06-01"))
# DF_subset <- DF[which(Date_radolan %in% seq(as.POSIXct("2010-08-06 06:00",tz="UTC"),as.POSIXct("2010-08-07 05:00",tz="UTC"),by="hours")),]
# colSums(as.matrix(DF_subset[,2:12]))
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/")
all_f
brick("X:/Buehler_Philipp/Thiessen/Emscher/2km_Thiessen_1951.grd")
all_f
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/",pattern = ".grd")
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/",pattern = ".grd")
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/",pattern = ".grd")
Raster_stack <- lapply(all_f, function(x) paste0(brick("X:/Buehler_Philipp/Thiessen/Emscher/",x)))
all_f
Raster_stack <- lapply(all_f, function(x) brick(paste0("X:/Buehler_Philipp/Thiessen/Emscher/",x)))
warnings()
Raster_stack
lapply(Raster_stack,nlayers)
sapply(Raster_stack,nlayers)
sum(sapply(Raster_stack,nlayers))
dim(Raster_stack)
dim(Raster_stack[[1]])
Raster_stack_array <- array(NA, dim=dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers)))
Raster_stack_array <- array(NA, dim=list(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
list(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers)))
Raster_stack_array <- array(NA, dim=c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
seq_along(all_f)
as.array(Raster_stack[[i]])
c_new <- c+ nlayer(Raster_stack[[i]])
c_new <- c+ nlayers(Raster_stack[[i]])
c_new
cc <- 1
c_new <- c+ nlayers(Raster_stack[[i]])
nlayers(Raster_stack[[i]])
c_new <- cc+ nlayers(Raster_stack[[i]])
cc_new <- cc+ nlayers(Raster_stack[[i]])
cc_new
cc <- 1
for(i in seq_along(all_f)){
cc <- 1
for(i in seq_along(all_f)){
cc_new <- cc+ nlayers(Raster_stack[[i]])
Raster_stack_array[,,(c:cc_new)] <- as.array(Raster_stack[[i]])
cc <- cc_new+1
}
i
cc_new <- cc+ nlayers(Raster_stack[[i]])
cc_new
c:cc_new
Raster_stack_array <- array(NA, dim=c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
cc <- 1
for(i in seq_along(all_f)){
cc_new <- cc+ nlayers(Raster_stack[[i]])
Raster_stack_array[,,(cc:cc_new)] <- as.array(Raster_stack[[i]])
cc <- cc_new+1
}
(cc:cc_new)
as.array(Raster_stack[[i]])
nlayers(Raster_stack[[i]])
cc
cc_new <- cc+ nlayers(Raster_stack[[i]])
Raster_stack_array[,,(cc:cc_new)] <- as.array(Raster_stack[[i]])
dim( as.array(Raster_stack[[i]]))
length( as.array(Raster_stack[[i]]))
Raster_stack[[i]]
xx=as.array(Raster_stack[[i]])
cc <- cc_new+1
dim(xx)
dim(Raster_stack_array)
length((cc:cc_new))
(cc:cc_new)
nlayers(Raster_stack[[i]])
cc_new
cc
cc <- 1
cc_new <- cc+ nlayers(Raster_stack[[i]])
length((cc:cc_new))
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
Raster_stack_array[,,(cc:cc_new)] <- as.array(Raster_stack[[i]])
cc <- 1
Raster_stack_array
cc <- 1
for(i in seq_along(all_f)){
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
Raster_stack_array[,,(cc:cc_new)] <- as.array(Raster_stack[[i]])
cc <- cc_new+1
}
dimz <- dim(Raster_stack_array)
dimz
Raster_stack_array_vec <- Raster_stack_array
dim(Raster_stack_array_vec) <-c(dimz[1] * dimz[2], dimz[3])
DF <- data.frame(Date=Date_radolan)
nrow(Shapes_Mulde)
Shapes_Mulde
print(i)
Raster_stack
Raster_stack[[1]]
ind_shapes_i <-  which(!is.na(as.matrix(mask(Raster_stack[[1]][[1]],Shapes_Mulde[i,]))))
Raster_stack[[1]][[1]]
mask(Raster_stack[[1]][[1]],Shapes_Mulde[i,]))
mask(Raster_stack[[1]][[1]],Shapes_Mulde[i,])
mask(Raster_stack[[1]],Shapes_Mulde[i,])
Raster_stack[[1]]
Raster_stack[[1]][[1]]
i
i=1
mask(Raster_stack[[1]][[1]],Shapes_Mulde[i,])
plot(mask(Raster_stack[[1]][[1]],Shapes_Mulde[i,]))
ind_shapes_i <-  which(!is.na(as.matrix(mask(Raster_stack[[1]][[1]],Shapes_Mulde[i,]))))
daily_mean <- apply(Raster_stack_array_vec,2, function(x) mean(x[ind_shapes_i]))
rm("Raster_stack")
Raster_stack= brick("X:/Buehler_Philipp/Thiessen/Emscher/2km_Thiessen_1951.grd")
ind_shapes_i <-  which(!is.na(as.matrix(mask(Raster_stack[[1]][[1]],Shapes_Mulde[i,]))))
daily_mean <- apply(Raster_stack_array_vec,2, function(x) mean(x[ind_shapes_i]))
dim(Raster_stack_array_vec)
Raster_stack <- brick("X:/Buehler_Philipp/Thiessen/Emscher/2km_Thiessen_1951.grd")
ind_shapes_i <-  which(!is.na(as.matrix(mask(Raster_stack[[1]][[1]],Shapes_Mulde[i,]))))
DF <- data.frame(Date=Date_radolan)
i
Raster_stack_array_vec[,i]
Raster_stack_array_vec[ind_shapes_i,i]
mean(Raster_stack_array_vec[ind_shapes_i,i])
DF
DF <- data.frame(Date=Date_radolan,N = NA)
dim(Raster_stack_array_vec)
length(Date_radolan)
library(raster)
library(rgdal)
library(sp)
source("functions.R")
plot(Raster_stack[[1]])
lines(Shapes_Mulde)
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/",pattern = ".grd")
Raster_stack <- lapply(all_f, function(x) brick(paste0("X:/Buehler_Philipp/Thiessen/Emscher/",x)))
library(raster)
library(rgdal)
library(sp)
source("functions.R")
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/",pattern = ".grd")
Raster_stack <- lapply(all_f, function(x) brick(paste0("X:/Buehler_Philipp/Thiessen/Emscher/",x)))
projj= CRS(projection(Raster_stack[[1]]))
projj
Shapes_Mulde=readOGR(dsn="U:/GIS/Emscher_Daten/Shapes_kum",layer="Shapes_kum")
Shapes_Mulde=spTransform(Shapes_Mulde, projj)
plot(Raster_stack[[1]][[1]])
lines(Shapes_Mulde)
plot(Raster_stack[[1]][[1]])
lines(Shapes_Mulde)
Date_radolan <- sapply(Raster_stack, function(x) getZ(x))
Date_radolan
Date_radolan <- do.call("c",sapply(Raster_stack, function(x) getZ(x)))
unique(diff(Date_radolan))
Date_radolan
Raster_stack_array <- array(NA, dim=c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
cc <- 1
for(i in seq_along(all_f)){
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
Raster_stack_array[,,(cc:cc_new)] <- as.array(Raster_stack[[i]])
cc <- cc_new+1
}
library(raster)
library(rgdal)
library(sp)
source("functions.R")
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/",pattern = ".grd")
Raster_stack <- lapply(all_f, function(x) brick(paste0("X:/Buehler_Philipp/Thiessen/Emscher/",x)))
projj= CRS(projection(Raster_stack[[1]]))
Shapes_Mulde=readOGR(dsn="U:/GIS/Emscher_Daten/Shapes_kum",layer="Shapes_kum")
Shapes_Mulde=spTransform(Shapes_Mulde, projj)
plot(Raster_stack[[1]][[1]])
lines(Shapes_Mulde)
Date_radolan <- do.call("c",sapply(Raster_stack, function(x) getZ(x)))
Raster_stack_array <- array(NA, dim=c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
cc <- 1
for(i in seq_along(all_f)){
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
Raster_stack_array[,,(cc:cc_new)] <- as.array(Raster_stack[[i]])
cc <- cc_new+1
}
dimz <- dim(Raster_stack_array)
Raster_stack_array_vec <- Raster_stack_array
dim(Raster_stack_array_vec) <-c(dimz[1] * dimz[2], dimz[3])
Date_radolan <- do.call("c",sapply(Raster_stack, function(x) getZ(x)))
library(raster)
library(rgdal)
library(sp)
source("functions.R")
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/",pattern = ".grd")
Raster_stack <- lapply(all_f, function(x) brick(paste0("X:/Buehler_Philipp/Thiessen/Emscher/",x)))
Date_radolan <- do.call("c",sapply(Raster_stack, function(x) getZ(x)))
projj= CRS(projection(Raster_stack[[1]]))
Shapes_Mulde=readOGR(dsn="U:/GIS/Emscher_Daten/Shapes_kum",layer="Shapes_kum")
Shapes_Mulde=spTransform(Shapes_Mulde, projj)
plot(Raster_stack[[1]][[1]])
lines(Shapes_Mulde)
dim(Raster_stack[[1]][[1]])
dim(Raster_stack[[1]][1:2])
sum(sapply(Raster_stack,nlayers)))
Raster_stack[[1]]
c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers)))
583705/24/365
Raster_stack_array <- array(NA, dim=c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
cc <- 1
for(i in seq_along(all_f)){
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
Raster_stack_array[,,(cc:cc_new)] <- as.array(Raster_stack[[i]])
cc <- cc_new+1
}
Raster_stack_array
i
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
Raster_stack
Raster_stack[[i]]
as.array(Raster_stack[[i]])
Raster_stack_array[,,(cc:cc_new)] <- as.array(Raster_stack[[i]])
mode(Raster_stack_array)
cc_new
Raster_stack_array <- array(NA, dim=c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
cc <- 1
all_f
for(i in seq_along(all_f)){
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
Raster_stack_array[,,(cc:cc_new)] <- as.array(Raster_stack[[i]])
cc <- cc_new+1
}
i
library(raster)
library(rgdal)
library(sp)
source("functions.R")
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/",pattern = ".grd")
Raster_stack <- lapply(all_f, function(x) brick(paste0("X:/Buehler_Philipp/Thiessen/Emscher/",x)))
Date_radolan <- do.call("c",sapply(Raster_stack, function(x) getZ(x)))
projj= CRS(projection(Raster_stack[[1]]))
Shapes_Mulde=readOGR(dsn="U:/GIS/Emscher_Daten/Shapes_kum",layer="Shapes_kum")
Shapes_Mulde=spTransform(Shapes_Mulde, projj)
plot(Raster_stack[[1]][[1]])
lines(Shapes_Mulde)
Raster_stack_array <- array(NA, dim=c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
cc <- 1
i=1
cc <- 1
for(i in seq_along(all_f)){
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
Raster_stack_array[,,(cc:cc_new)] <- as.array(Raster_stack[[i]])
cc <- cc_new+1
}
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
xx <- as.array(Raster_stack[[i]])
mode(Raster_stack_array)
Raster_stack_array <- array(numeric(NA), dim=c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
numeric(NA)
Raster_stack_array <- array(as.numeric(NA), dim=c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
Raster_stack_array
mode(Raster_stack_array)
cc <- 1
for(i in seq_along(all_f)){
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
xx <- as.array(Raster_stack[[i]])
Raster_stack_array[,,(cc:cc_new)] <- xx
cc <- cc_new+1
}
i
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
xx <- as.array(Raster_stack[[i]])
Raster_stack_array[,,(cc:cc_new)]
xx
Raster_stack_array[,,(cc:cc_new)] <- xx
Raster_stack_array <- array(as.numeric(NA), dim=c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
library(raster)
library(rgdal)
library(sp)
source("functions.R")
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/",pattern = ".grd")
Raster_stack <- lapply(all_f, function(x) brick(paste0("X:/Buehler_Philipp/Thiessen/Emscher/",x)))
Date_radolan <- do.call("c",sapply(Raster_stack, function(x) getZ(x)))
projj= CRS(projection(Raster_stack[[1]]))
Shapes_Mulde=readOGR(dsn="U:/GIS/Emscher_Daten/Shapes_kum",layer="Shapes_kum")
Shapes_Mulde=spTransform(Shapes_Mulde, projj)
plot(Raster_stack[[1]][[1]])
lines(Shapes_Mulde)
Raster_stack_array <- array(as.numeric(NA), dim=c(dim(Raster_stack[[1]])[1:2], sum(sapply(Raster_stack,nlayers))))
i
cc_new <- cc+ (nlayers(Raster_stack[[i]])-1)
xx <- as.array(Raster_stack[[i]])
i=1
cc_new <- cc + (nlayers(Raster_stack[[i]])-1)
xx <- as.array(Raster_stack[[i]])
Raster_stack_array[,,(cc:cc_new)] <- xx
cc <- 1
cc_new <- cc + (nlayers(Raster_stack[[i]])-1)
xx <- as.array(Raster_stack[[i]])
Raster_stack_array[,,(cc:cc_new)] <- xx
library(data.table)
i=1
DT <- data.table(Null)
ind_shapes_i <-  which(!is.na(as.matrix(mask(Raster_stack[[1]][[1]],Shapes_Mulde[i,]))))
i
xx <- as.array(Raster_stack[[i]])
D <- getZ(Raster_stack[[i]])
xx
D
array_part <- as.array(Raster_stack[[i]])
D <- getZ(Raster_stack[[i]])
array_part
dimz <- dim(array_part)
dim(array_part) <-c(dimz[1] * dimz[2], dimz[3])
dim(array_part)
ind_shapes_i
mean_part <- apply(array_part,2, function(x) mean(x[ind_shapes_i]))
mean_part
plot(mean_part)
barplot(mean_part)
a
array_part <- as.array(Raster_stack[[i]])
D <- getZ(Raster_stack[[i]])
dimz <- dim(array_part)
dim(array_part) <-c(dimz[1] * dimz[2], dimz[3])
mean_part <- apply(array_part,2, function(x) mean(x[ind_shapes_i]))
DT <- rbind(DT, data.table(Date=D, N=mean_part))
DT <- data.table(Null)
DT <- rbind(DT, data.table(Date=D, N=mean_part))
DT <- data.table(Null)
DT <- data.table()
DT
DT <- rbind(DT, data.table(Date=D, N=mean_part))
DT
library(raster)
library(rgdal)
library(sp)
library(data.table)
source("functions.R")
all_f <- list.files("X:/Buehler_Philipp/Thiessen/Emscher/",pattern = ".grd")
Raster_stack <- lapply(all_f, function(x) brick(paste0("X:/Buehler_Philipp/Thiessen/Emscher/",x)))
Date_radolan <- do.call("c",sapply(Raster_stack, function(x) getZ(x)))
projj= CRS(projection(Raster_stack[[1]]))
Shapes_Mulde=readOGR(dsn="U:/GIS/Emscher_Daten/Shapes_kum",layer="Shapes_kum")
Shapes_Mulde=spTransform(Shapes_Mulde, projj)
plot(Raster_stack[[1]][[1]])
lines(Shapes_Mulde)
DT <- data.table()
Raster_stack[[1]]
Raster_stack[[1]][[1]]
i
Shapes_Mulde
DT <- data.table()
DT <- data.table()
ind_shapes_i <-  which(!is.na(as.matrix(mask(Raster_stack[[1]][[1]],Shapes_Mulde))))
for(i in seq_along(all_f)){
print(i/length(all_f))
array_part <- as.array(Raster_stack[[i]])
D <- getZ(Raster_stack[[i]])
dimz <- dim(array_part)
dim(array_part) <-c(dimz[1] * dimz[2], dimz[3])
mean_part <- apply(array_part,2, function(x) mean(x[ind_shapes_i]))
DT <- rbind(DT, data.table(Date=D, N=mean_part))
}
DT
unique(diff(DT$Date))
fwrite(DF,"U:/P_hourly_Emscher.csv",sep=";",dateTimeAs = "write.csv")
fwrite(DT,"U:/P_hourly_Emscher.csv",sep=";",dateTimeAs = "write.csv")
shiny_files <- list.files("V:/GitHub_Repos/FloodR/inst/shinyApp")
shiny_files
shiny_files <- list.files("V:/GitHub_Repos/FloodR/inst/shinyApp")
sapply(shiny_files,source)
shiny_files <- list.files("V:/GitHub_Repos/FloodR/inst/shinyApp",full.names = TRUE)
sapply(shiny_files,source)
install.packages("shiny")
shiny_files
shiny_files <- list.files("V:/GitHub_Repos/FloodR/inst/shinyApp",full.names = TRUE)[2:3]
sapply(shiny_files,source)
PKGENVIR <- new.env(parent=emptyenv())
Run_WebFlood <- function(Discharge=NULL,Precipitation=NULL,Catchment_Properties=NULL,language="en")
{
require(shiny)
PKGENVIR$language <- language
PKGENVIR$Discharge <- Discharge
PKGENVIR$Precipitation <- Precipitation
PKGENVIR$Catchment_Properties <- Catchment_Properties
PKGENVIR$Dummy <- Dummy
shiny::runApp(appDir = system.file("shinyApp", package = "FloodR"))
}
Run_WebFlood()
load("V:/GitHub_Repos/FloodR/R/sysdata.rda")
Run_WebFlood()
setwd("U:/")
library(shiny)
setwd("V:/GitHub_Repos/FloodR/inst/shinyApp")
load("V:/GitHub_Repos/FloodR/R/sysdata.rda")
Run_WebFlood()
Run_WebFlood
setwd("V:/GitHub_Repos/FloodR/inst")
load("V:/GitHub_Repos/FloodR/R/sysdata.rda")
Run_WebFlood()
PKGENVIR <- new.env(parent=emptyenv())
require(shiny)
re(shiny)
re(shiny)
require(shiny)
PKGENVIR$language <- language
shiny::runApp(appDir = system.file("shinyApp", package = "FloodR"))
